input {
  syslog {
    port  => 514
    codec => plain
    type  => "A10"
  }
}
filter {
  if "A10" in [type] {
    # check for AFLEX
    if "AFLEX" in [message] {
      grok {
        match => [ "message", "%{A10AFLEX1}" ]
        match => [ "message", "%{A10AFLEX2}" ]
        overwrite => [ "message" ]
      }
      kv {
        source => "message"
        field_split => ","
        value_split => ":"
        trimkey => "\""
        remove_field => "message"
      }
      useragent {
        source => "cs-useragent"
        target => "ua"
      }
      # split URI host from params
      grok {
        match => [ "cs-uri-stem", "%{URIHOST:cs-uri-host}%{URIPATHPARAM:cs-uri-param}" ]
      }
      date {
        match => [ "EventTime", "yyyy-MM-dd HH:mm:ss" ]
      }
      mutate {
        rename => ["c-ip", "src_ip"]
        remove_field => [ "date", "time", "timestamp", "EventTime", "facility", "facility_label", "severity", "severity_label" ]
      }

      # GEOIP
      if [src_ip] and [src_ip] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {
        geoip {
          source => "src_ip"
          target => "srcgeoip"
          database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
          add_field => [ "[srcgeoip][coordinates]", "%{[srcgeoip][longitude]}" ]
          add_field => [ "[srcgeoip][coordinates]", "%{[srcgeoip][latitude]}"  ]
        }
        mutate {
          convert => [ "[srcgeoip][coordinates]", "float" ]
        }
      }
    } else {
      grok {
        match => [ "message", "%{A101BASEHMON}" ]
        match => [ "message", "%{A101BASEACOS1}" ]
        match => [ "message", "%{A101BASEACOS2}" ]
        match => [ "message", "%{A101BASEGENERIC1}" ]
        match => [ "message", "%{A101BASEGENERIC2}" ]
        match => [ "message", "%{GREEDYDATA:message}" ]
        overwrite => [ "message" ]
        add_tag => [ "balancer" ]
      }
      # TIMESTAMP REPLACE
      date {
        match => [ "timestamp", "MMM dd HH:mm:ss" ]
      }
      mutate {
        remove_field => [ "timestamp" ]
      }
    }
  }
}
output {
  elasticsearch {
    hosts => "elasticsearch-node"
    index => "a10logs-%{+YYYY.MM.dd}"
    template_name => "acos"
  }
}
